type Accessory = record {
  id : nat64;
  updated_at : opt nat64;
  name : text;
  description : text;
  created_at : nat64;
  seller : text;
  category : text;
  is_available : bool;
  price : nat64;
};
type AccessoryPayload = record {
  name : text;
  description : text;
  category : text;
  is_available : bool;
  price : nat64;
};
type Error = variant {
  ValidationFailed : record { msg : text };
  NotFound : record { msg : text };
  AuthenticationFailed : record { msg : text };
};
type Result = variant { Ok : Accessory; Err : Error };
type Result_1 = variant { Ok : nat64; Err : Error };
type TransactionRecord = record {
  transaction_type : text;
  change_type : text;
  timestamp : nat64;
};
service : {
  add_accessory : (AccessoryPayload) -> (Result);
  bulk_update_accessories : (vec record { nat64; AccessoryPayload }) -> (
      vec Result,
    );
  delete_accessory : (nat64) -> (Result);
  get_accessories_by_category : (text) -> (vec Accessory) query;
  get_accessory : (nat64) -> (Result) query;
  get_accessory_price : (nat64) -> (Result_1) query;
  get_accessory_transaction_history : (nat64) -> (vec TransactionRecord) query;
  get_available_accessories : () -> (vec Accessory) query;
  search_accessories : (text) -> (vec Accessory) query;
  toggle_accessory_availability : (nat64) -> (Result);
  update_accessory : (nat64, AccessoryPayload) -> (Result);
}
